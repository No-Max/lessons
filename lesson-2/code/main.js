// Явное преобразование при помощи объектов оберток
//console.log(Boolean(11)) // к булевому значению
//console.log(Number(10n)) // к числу
//console.log(String(true)) // к строке
//console.log(BigInt("10")) // к bigInt
//console.log(Number(Boolean(String("")))) // Цепочка преобразоаний (справа налево)

// 3 способа записи строк
// ''
// ""
// ``

// выполнение кода внутри обратных кавычек (сложение строк)
// const num = prompt("Please input number")
// console.log(`hi ${num}`)
// console.log("hi " + num) // выведет тоже что и предыдущая строчка сложение с помощью оператора + (конкатенация)

// Лексическое окружение - гло бальные и локальные переменные
// let v1 = '22'
// if (true) {
//     let v2 = ''
//     console.log(v3) // нет доступа к v3
//     if(true) {
//         let v3 = '23'
//         console.log(v3) // доступ к v3
//     }
//     console.log(v3) // нет доступа к v3
// }

// операторы сравнения - результат вычисления, всегда, булево значение
// синтаксис: значение1 операторСравнения значение2
// console.log(60 > 50) // больше
// console.log(60 < 50) // меньше
// console.log(50 <= 50) // меньше либо равно
// console.log(50 >= 50) // больше либо равно
// console.log(50 <= 50) // меньше либо равно
// console.log(50 == 50) // равно с приведением к одному типу (нестрогое равенство)
// console.log(50 != 50) // неравно с приведением к одному типу (нестрогое неравенство)
// console.log(50 === 50) // равно без приведения к одному типу (строгое равенство)
// console.log(50 !== 50) // неравно без приведения к одному типу (строгое неравенство)
// всегда пользуемся только строгими вариантами равенства и неравенства

// Логические операции

// логическое Не
// синтаксис: !значение
// результат выражения - булево значение (инвертированное) 
// console.log(!true) // false
// console.log(!"") // true
// console.log(!!"string") // двойное Не преобразует значение к булевому, может быть использовано вместо Boolean("string")

// Оператор логическое Или
// синтаесис: значение1 || значение2
// результатом вычисления является значение1 если оно правдиво, иначе значение2

// console.log(true || false) // true
// console.log(null || false) // false
// let str = "str1"
// console.log("" || "" || str || null) // цепочка логических Или

// Оператор логическое И
// синтаксис: значение1 && значение2
// результатом вычисления является значение1 если оно ложно, иначе значение2
// console.log(null && false) // null
// console.log(" " && false) // false
// console.log("21" && true && "") // цепочка логических И

// Оператор сравнения с null/undefined 
// синтаксис: значение1 ?? значение1 
// венет значение1 если оно не является null или undefined
// console.log(null ?? "default") // "default"
// console.log(0 ?? "default") // 0
// console.log(0 || "default") // "default" - в отличие от предыдущего примера

// let age1 = undefined
// let obj = {
//     age: age1 || 10, // широко используется для задания значений по умолчанию
// }
// console.log(obj.age) // 10


// Ветвления if

/*
синтаксис1 :
if (условие) {
    //ваш код
}
*/

// let variable = 4
// if (variable === 4) {
//     console.log("is 4")
// }

/*
синтаксис2 :
if (условие) {
    // ваш код
} else {
    // ваш код
}
*/

// if (variable !== 4) {
//     console.log("is 4")
// } else {
//     console.log("is not 4")
// }

/*
синтаксис3 :
if (условие1) {
    // ваш код
} else if (условие2) {
    // ваш код
} else {
    // ваш код
}
*/

// if (variable === 3) {
//     console.log("is 3")
// } else if (variable === 4) {
//     console.log("is 4")
// } else {
//     // дефолтное тело - сработает если все предыдущие условия не сработали (вернули false)
//     console.log("is not 4")
// }